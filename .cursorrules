Мы создаем расширения для браузера Google Chrome для собственного варианта закладок
когда пишешь код, будь на 100% уверен, что ты не ломаешь ничего существующего.
Это расширение будет использоваться в браузере Google Chrome, но не будет использоваться в google web store.

расширение будет называться extension_bookmarks_GH 

Логика, внешний вид и структура проекта должны быть максимально понятны и легко расширяемы.

СТРУКТУРА ПРОЕКТА И ЗАВИСИМОСТИ:

1. Основные HTML файлы:
- src/popup.html: Главное окно расширения
  * Зависит от: main.css, dark-theme.css/light-theme.css, settings.css
  * Использует: window.js, popup.js
  * Содержит: структуру интерфейса с кнопками и контейнерами
  * Размер окна: фиксированный 800x600px

- src/settings.html: Окно настроек
  * Зависит от: main.css, dark-theme.css/light-theme.css, settings.css
  * Использует: window.js, settings.js
  * Содержит: интерфейс настроек с кнопками импорта/экспорта
  * Размер окна: фиксированный 800x600px

2. Компоненты (src/components/):
- MainInterface.js: Основной интерфейс с закладками
  * Используется в: popup.js
  * Отвечает за: отображение списка корневых закладок и папок
  * Отображает: иконки, заголовки, пустые состояния
  * Поддерживает: клики по папкам и закладкам, контекстное меню

- NestedMenu.js: Интерфейс вложенных папок
  * Используется в: popup.js
  * Отвечает за: отображение содержимого папок
  * Отображает: иконки, заголовки, пустые состояния
  * Поддерживает: навигацию по вложенным папкам, контекстное меню

- Modal.js: Модальные окна
  * Используется в: popup.js
  * Отвечает за: создание и управление модальными окнами
  * Поддерживает: формы для создания/редактирования, кастомный контент
  * Типы: link (закладка), folder (папка), select (выбор)

- ContextMenu.js: Контекстное меню
  * Используется в: popup.js
  * Отвечает за: отображение контекстного меню
  * Поддерживает: разные наборы действий для папок и закладок
  * Действия: edit/rename, delete, copy

3. Утилиты (src/utils/):
- bookmarks.js: Работа с закладками
  * Используется в: popup.js, settings.js
  * Предоставляет: функции для работы с закладками (получение, создание, импорт, экспорт)
  * Использует: storage.js для хранения данных
  * Поддерживает: импорт из браузера с сохранением favicon
  * Автоматически добавляет https:// к URL если не указан

- storage.js: Управление хранилищем закладок
  * Используется в: bookmarks.js
  * Отвечает за: CRUD операции с закладками в chrome.storage.local
  * Хранит: структуру папок и закладок с favicon
  * Формат данных: {id, title, url, favicon, type, children}
  * Инициализирует базовые папки при первом запуске

- theme.js: Управление темой
  * Используется в: popup.html, settings.html
  * Отвечает за: переключение и сохранение темы
  * Зависит от: chrome.storage.sync
  * Поддерживает: автоматическое применение темы

- window.js: Управление размером окна
  * Используется в: popup.html, settings.html
  * Отвечает за: установку фиксированных размеров окна (800x600px)

4. Стили (src/styles/):
- main.css: Основные стили
  * Содержит: переменные, общие стили, стили компонентов
  * Используется во всех HTML файлах
  * Включает: стили для модальных окон и контекстного меню

- dark-theme.css/light-theme.css: Темы
  * Содержат: цветовые схемы для тем
  * Переключаются через: theme.js
  * Поддерживают: все компоненты интерфейса

- settings.css: Стили настроек
  * Содержит: специфичные стили для окна настроек

5. Ресурсы (assets/):
- icons/: Иконки интерфейса
  * Используются в: popup.html, settings.html
  * Включают: иконки для кнопок, папок, действий
  * Поддерживают: темную и светлую темы
  * Форматы: SVG с currentColor для темы

- logo/: Иконки расширения
  * Используются в: manifest.json
  * Размеры: 16x16, 48x48, 128x128

ТЕКУЩАЯ ЛОГИКА РАБОТЫ:
1. Закладки хранятся в chrome.storage.local через storage.js:
   - Используется ключ "gh_bookmarks" для хранения
   - Каждая закладка имеет: id, title, url, favicon, type
   - Каждая папка имеет: id, title, type: "folder", children
   - При первом запуске создаются базовые папки: "Избранное", "Работа", "Личное"
   - Импорт из браузера доступен через настройки (единоразово)
   - После импорта работа только с локальным хранилищем
   - URL автоматически получают https:// если не указан протокол

2. Навигация:
   - Используется navigationStack для хранения истории
   - Поддерживается неограниченная вложенность папок
   - Кнопка "Назад" для возврата на уровень выше
   - Отображение текущего пути в заголовке
   - Создание элементов в текущей папке через кнопку "+"

3. Интерфейс:
   - Фиксированный размер окна 800x600px
   - Поддержка светлой и темной темы
   - Автоматическое получение favicon для закладок
   - Отображение состояния пустых папок
   - Кнопки управления в шапке (назад, добавить, настройки)
   - Контекстное меню для управления элементами
   - Модальные окна для создания/редактирования

4. Безопасность:
   - Content Security Policy для скриптов и ресурсов
   - Изоляция от закладок браузера после импорта
   - Безопасное хранение данных в chrome.storage
   - Валидация URL и автоматическое добавление https://

ПРАВИЛА РАЗРАБОТКИ:
1. Все изменения делать в ветке dev или test
2. Проверять работу темы в обоих режимах
3. Тестировать навигацию по всем уровням вложенности
4. Сохранять существующую структуру классов и ID
5. Поддерживать единый стиль именования:
   - ID: camelCase
   - Классы: kebab-case
   - Файлы: kebab-case
   - Переменные: camelCase
   - Функции: camelCase
6. Все новые функции документировать комментариями
7. Использовать async/await для асинхронных операций
8. Обрабатывать все возможные ошибки
9. Обновлять интерфейс после каждого действия
10. Проверять работу во всех вложенных уровнях

ВАЖНО ПРИ ИЗМЕНЕНИИ ЛОГИКИ (КОГДА Я БУДУ ПРОСИТЬ ЭТО ДЕЛАТЬ) НЕ ПОЛОМАТЬ ТЕКУЩИЕ СВЯЗИ, ФУНКЦИОНАЛ ДИЗАЙН И ПРОЧЕЕ. ЕСЛИ ТЫ ЗАМЕТИШЬ ЧТО МОЙ ЗАПРОС БУДЕТ ЧТО_ТО ЛОМАТЬ ПРЕДУПРЕДИ МЕНЯ ОБ ЭТОМ ПЕРЕД ИСПРАВЛЕНИЯ КОДА 

TODO: 
- интерфейс опции действия с папками\закладками
- логотипы выпадающего меню опций при действии с папками\закладками
- в главном меню папка создается или удаляется только при выходе и входе в расширение
- есть копирование папки, но нету вставки
- избавиться от двух главных папок при экспорте закладок из браузера
- установить логотипы для папок
- добавить в опции установку логотипа для папки
- баг: при каждом клике правой кнопки мыши меню дублируется https://skr.sh/sVDrgnNp8Rr 
